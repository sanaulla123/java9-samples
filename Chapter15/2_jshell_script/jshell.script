import java.time.*;
ZoneId.getAvailableZoneIds().stream().count()
ZoneId.getAvailableZoneIds().stream().limit(10).forEach(System.out::println)
ZoneId.of("US/Pacific").getRules().getDaylightSavings(Instant.now())
ZoneId.of("US/Pacific").getRules().getOffset(LocalDateTime.now())
ZoneId.of("US/Pacific").getRules().getStandardOffset(Instant.now())
ZoneOffset.ofHoursMinutes(5,30)
var hourAheadClock = Clock.offset(Clock.system(ZoneId.of("Asia/Kolkata")), Duration.ofHours(1));
LocalDateTime.now(hourAheadClock)
ZonedDateTime.now(hourAheadClock)
ZonedDateTime.of(LocalDateTime.of(2018, 1, 1, 13, 44, 44), ZoneId.of("Asia/Kolkata"))
ZonedDateTime.of(LocalDate.of(2018,1,1), LocalTime.of(13, 44, 44), ZoneId.of("Asia/Kolkata"))
 ZonedDateTime.of(LocalDate.of(2018,1,1), LocalTime.of(13, 44, 44), ZoneId.of("Asia/Kolkata"))
ZonedDateTime.of(2018, 1, 1, 13, 44, 44, 0, ZoneId.of("Asia/Kolkata"))
OffsetTime.of(LocalTime.of(14,12,34), ZoneOffset.ofHoursMinutes(5, 30))
OffsetTime.of(14, 34, 12, 11, ZoneOffset.ofHoursMinutes(5, 30))
OffsetTime.now()
OffsetTime.now(ZoneId.of("Asia/Kolkata"))
OffsetTime.now(ZoneId.of("Asia/Kolkata"))
OffsetTime.now(Clock.offset(Clock.systemUTC(), Duration.ofMinutes(330)))